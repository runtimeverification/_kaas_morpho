---
  name: 'Proof Runner'
  on:
    workflow_dispatch:
      inputs:
        branch_name:
          description: 'Branch Name of Clients code to Clone'
          required: true
        extra_args:
          description: 'Additional Arguments to for run_kontro.sh '
          required: false
        statuses_sha:
          description: 'SHA of the commit to report status back to'
          required: false
        org:
          description: 'Organization to report statuses back to'
          required: false
        repository:
          description: 'Repository to report statuses back to'
          required: false
        auth_token:
          description: 'Auth Token w/ commit statuses permissions for reporting status'
          required: false
        skip_status_report:
          description: 'Skip status report to github'
          required: false
          default: false
  
  # Stop in progress workflows on the same branch and same workflow to use latest committed code
  concurrency:
    group: ${{ github.workflow }}-${{ github.ref }}-${{ github.event.inputs.branch_name }}
    cancel-in-progress: true
  
  jobs:
    test-proofs:
      name: 'Test Proofs'
      runs-on: [self-hosted, linux, kaas]
      steps:
        - name: 'Check out code'
          uses: actions/checkout@v4
          with:
            token: ${{ secrets.JENKINS_GITHUB_PAT }}
            fetch-depth: 0

        - name: Report Pending Status
          if: ${{ github.event.inputs.skip_status_report == 'false' }}
          run: |
            curl -L -X POST \
              -H "Accept: application/vnd.github+json" \
              -H "Authorization: Bearer ${{ github.event.inputs.auth_token }}" \
              -H "X-GitHub-Api-Version: 2022-11-28" \
              https://api.github.com/repos/${{ github.event.inputs.org }}/${{ github.event.inputs.repository }}/statuses/${{ github.event.inputs.statuses_sha }} \
              -d '{
                "state": "pending",
                "target_url": "https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}",
                "description": "Proofs Pending",
                "context": "runtimeverification/proof-runner"
              }'
        
        # Add this section to cehckout the client code. UPDATE the fields to match the client repository/org information -- Ideally client code is setup as a fork of the original repsoitory                             
        - name: Checkout CLIENT Code
          uses: actions/checkout@v4
          with:
            repository: '${{ github.event.inputs.org }}/${{ github.event.inputs.repository }}'
            token: ${{ secrets.JENKINS_GITHUB_PAT }}
            path: _kaas_morpho/lib/'${{ github.event.inputs.repository }}'
            ref: ${{ github.event.inputs.branch_name }}
            fetch-depth: 0
            submodules: 'recursive'
        
        - name: "Install KaaS"
          uses: runtimeverification/install-kaas@v0.2.1
          with:
            github-token: ${{ secrets.JENKINS_GITHUB_PAT }}
          
        - name: "Download KCFG Cache Results"
          shell: bash
          run: |
            tag=$(git hash-object kontrol.toml)
            kaas-cli download --token ${{ secrets.CLIENT_TOKEN }} ${{ github.event.inputs.org }}/${{ github.event.inputs.repository }}:$tag -d ./out
      
        # Some Setups Require using `pushd` to setup execution in the correct client directory
        # Some Setups require an additional step to pull all the necessary files, examples are `npm install` or `git submodule update --recursive` 
        - name: 'Run Kontrol'
          shell: bash
          run: |
            # Step into Runtime Folder
            # Call Kontrol Directly and using 'local' mode or do not specify local/dev to run in a container
            ./test/kontrol/scripts/run-kontrol.sh ${{ github.event.inputs.extra_args }}
    
        - name: 'KaaS Cache Upload'
          if: always()
          shell: bash
          run: |
            # Enter directory where `out` folder is generated 
            tag=$(git hash-object kontrol.toml)
            kaas-cli upload --token ${{ secrets.CLIENT_TOKEN }} ${{ github.event.inputs.org }}/${{ github.event.inputs.repository }}:$tag -d ./out
      
        - name: 'Upload Results to GH Summary'
          if: always()
          uses: actions/upload-artifact@v4.3.1
          with:
            name: Kontrol Results
            path: ./**/results-*.tar.gz
            retention-days: 14

        - name: Report Pass Status
          if: always() && success() && ${{ github.event.inputs.skip_status_report == 'false' }}
          run: |
            curl -L -X POST \
              -H "Accept: application/vnd.github+json" \
              -H "Authorization: Bearer ${{ github.event.inputs.auth_token }}" \
              -H "X-GitHub-Api-Version: 2022-11-28" \
              https://api.github.com/repos/${{ github.event.inputs.org }}/${{ github.event.inputs.repository }}/statuses/${{ github.event.inputs.statuses_sha }} \
              -d '{
                "state": "success",
                "target_url": "https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}",
                "description": "Client Proof Execution Success",
                "context": "runtimeverification/proof-runner"
              }'

        - name: Report Failure Status
          if: always() && failure() || cancelled() && ${{ github.event.inputs.skip_status_report == 'false' }}
          run: |
            curl -L \
              -X POST \
              -H "Accept: application/vnd.github+json" \
              -H "Authorization: Bearer ${{ secrets.JENKINS_GITHUB_PAT }}" \
              -H "X-GitHub-Api-Version: 2022-11-28" \
              https://api.github.com/repos/${{ github.event.inputs.org }}/${{ github.event.inputs.repository }}/statuses/${{ github.event.inputs.statuses_sha }} \
              -d '{
                  "state":"failure",
                  "target_url":"https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}",
                  "description":"Client Proof Execution Failure",
                  "context":"runtimeverification/proof-runner"
                }'
    
